"""

–û—Å–æ–±–ª–∏–≤–æ—Å—Ç—ñ Timsort:
–°–∫–ª–∞–¥–Ω—ñ—Å—Ç—å:
–ù–∞–π–ø–æ–≥–∞–Ω—ñ—à–∏–π –≤–∏–ø–∞–¥–æ–∫:
ùëÇ(ùëõlog‚Å°ùëõ)
O(nlog n)
–ö—Ä–∞—â–∏–π –≤–∏–ø–∞–¥–æ–∫:
ùëÇ(ùëõ)
O(n) (—è–∫—â–æ –º–∞—Å–∏–≤ –≤–∂–µ –≤—ñ–¥—Å–æ—Ä—Ç–æ–≤–∞–Ω–æ –∞–±–æ –º–∞–π–∂–µ –≤—ñ–¥—Å–æ—Ä—Ç–æ–≤–∞–Ω–æ)
–°–µ—Ä–µ–¥–Ω—ñ–π –≤–∏–ø–∞–¥–æ–∫:
ùëÇ(ùëõlog‚Å°ùëõ)O(nlog n)
–°—Ç–∞–±—ñ–ª—å–Ω—ñ—Å—Ç—å:
Timsort —î —Å—Ç–∞–±—ñ–ª—å–Ω–∏–º –∞–ª–≥–æ—Ä–∏—Ç–º–æ–º (–Ω–µ –∑–º—ñ–Ω—é—î –ø–æ—Ä—è–¥–æ–∫ —Ä—ñ–≤–Ω–∏—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤).
–ï—Ñ–µ–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å:
–î–æ–±—Ä–µ –ø—Ä–∞—Ü—é—î –Ω–∞ —Ä–µ–∞–ª—å–Ω–∏—Ö –¥–∞–Ω–∏—Ö, —è–∫—ñ —á–∞—Å—Ç–æ –º–∞—é—Ç—å —á–∞—Å—Ç–∫–æ–≤–æ –≤—ñ–¥—Å–æ—Ä—Ç–æ–≤–∞–Ω—ñ —Ñ—Ä–∞–≥–º–µ–Ω—Ç–∏.

"""
from busy_time_meter import busy_time_meter


def insertion_sort(arr, left, right):
    """–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –≤—Å—Ç–∞–≤–∫–∞–º–∏ –Ω–∞ –¥–∏–∞–ø–∞–∑–æ–Ω–µ –æ—Ç left –¥–æ right."""
    for i in range(left + 1, right + 1):
        key = arr[i]
        j = i - 1
        while j >= left and arr[j] > key:
            arr[j + 1] = arr[j]
            j -= 1
        arr[j + 1] = key


def merge(arr, temp, left, mid, right):
    """–°–ª–∏—è–Ω–∏–µ –¥–≤—É—Ö –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —á–∞—Å—Ç–µ–π –º–∞—Å—Å–∏–≤–∞."""
    i, j, k = left, mid + 1, left

    while i <= mid and j <= right:
        if arr[i] <= arr[j]:
            temp[k] = arr[i]
            i += 1
        else:
            temp[k] = arr[j]
            j += 1
        k += 1

    while i <= mid:  # –û—Å—Ç–∞–≤—à–∏–µ—Å—è —ç–ª–µ–º–µ–Ω—Ç—ã –∏–∑ –ª–µ–≤–æ–π —á–∞—Å—Ç–∏
        temp[k] = arr[i]
        i += 1
        k += 1

    while j <= right:  # –û—Å—Ç–∞–≤—à–∏–µ—Å—è —ç–ª–µ–º–µ–Ω—Ç—ã –∏–∑ –ø—Ä–∞–≤–æ–π —á–∞—Å—Ç–∏
        temp[k] = arr[j]
        j += 1
        k += 1

    # –ö–æ–ø–∏—Ä—É–µ–º –æ–±—Ä–∞—Ç–Ω–æ –≤ –∏—Å—Ö–æ–¥–Ω—ã–π –º–∞—Å—Å–∏–≤
    for i in range(left, right + 1):
        arr[i] = temp[i]


@busy_time_meter
def tim_sort(arr):
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è Timsort."""
    n = len(arr)
    MIN_RUN = 32

    # –®–∞–≥ 1: –†–∞–∑–±–∏—Ç—å –º–∞—Å—Å–∏–≤ –Ω–∞ –ø—Ä–æ–±–µ–≥–∏ –∏ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –∏—Ö –≤—Å—Ç–∞–≤–∫–∞–º–∏
    for start in range(0, n, MIN_RUN):
        end = min(start + MIN_RUN - 1, n - 1)
        insertion_sort(arr, start, end)

    # –®–∞–≥ 2: –°–ª–∏—è–Ω–∏–µ –ø—Ä–æ–±–µ–≥–æ–≤ —Å —É–¥–≤–æ–µ–Ω–∏–µ–º —Ä–∞–∑–º–µ—Ä–∞
    size = MIN_RUN
    temp = [0] * n  # –í—Ä–µ–º–µ–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤ –¥–ª—è —Å–ª–∏—è–Ω–∏—è
    while size < n:
        for left in range(0, n, 2 * size):
            mid = min(left + size - 1, n - 1)
            right = min(left + 2 * size - 1, n - 1)

            if mid < right:
                merge(arr, temp, left, mid, right)

        size *= 2

    return arr
